syntax = "proto3";

import "google/protobuf/timestamp.proto";

package api;

option go_package = "/api;api";

service Catalog {
  // дерево активных категорий
  rpc categoryTree(CategoryTreeRequest) returns (CategoryTreeResponse) {}
  // список товаров с фильтром по категории и пагинацией
  rpc listProducts(ListProductsRequest) returns (ListProductsResponse) {}
  // товар по ID
  rpc getProductByID(GetProductByRequest) returns (Product) {}
  // товары по ID
  rpc getProductsByID(GetProductsByIDRequest) returns (GetProductsByIDResponse) {}
  // получить типы фильтров (значения фильтров получаются из найденных товаров)
  rpc listFilters(ListFiltersRequest) returns (ListFiltersResponse) {}
}

message ListProductsRequest {
  oneof category_id {
    // id в категории в каталоге 2.0
    int32 id = 1;
    // id в категории в старом каталоге
    int32 old_id = 2;
  }
  int32 page = 3;
  int32 per_page = 4;
}

message ProductBrand {
  string code = 1;
  string name = 2;
}

message ProductProducer {
  string id = 1;
  string name = 2;
}

message ProductInstruction {
  string id = 1;
  // показания
  string indictation = 2;
  // противопоказания
  string contra_indication = 3;
  // особые указания
  string special_instruction = 4;
  // фармакологическое действие
  string pharm_action = 5;
  // способ применения и дозировка
  string dosage = 6;
  // взаимодействие с другими лекарствами
  string interaction = 7;
  // передозировка
  string over_dosage = 8;
  // побочные действия
  string side_effect = 9;
  // состав
  string formulation = 10;
}

message ProductAttribute {
  // id атрибута
  int32 id = 1;
  // название (русское)
  string name = 2;
  // символьный код
  string code = 4;
  // значения
  repeated string value = 5;
}

message Product {
  // eima.ES_EIMA.ID
  string id = 1;
  // название
  string name = 2;
  // информация о бренде
  ProductBrand brand = 3;
  // информация о производителе
  ProductProducer producer = 4;
  // описания
  ProductInstruction instruction = 5;
  // символьный код (ссылка)
  string code = 6;
  // дата создания
  google.protobuf.Timestamp created_at = 7;
  // дата изменения
  google.protobuf.Timestamp updated_at = 8;
  // краткое описание
  string short_desc = 9;
  // атрибуты в формате code => свойство
  map<string, ProductAttribute> attributes = 10;
  // ссылка
  string url = 12;
}

message ListProductsResponse {
  // товары
  repeated Product items = 1;
  // всего нашлось
  int64 total = 2;
}

message GetProductByRequest {
  string id = 1;
}

message ListFiltersRequest {
}

message Filter {
  // id фильтра
  int32 id = 1;
  // название (русское)
  string name = 2;
  // символьный код (матчится с ProductAttribute.code)
  string code = 3;
  // тип фильтра (range|checkbox_list|checkbox_list_search)
  string type = 4;
}

message ListFiltersResponse {
  repeated Filter items = 1;
}

message GetProductsByIDRequest {
  repeated string ids = 1;
}

message GetProductsByIDResponse {
  map<string, Product> items = 1;
}

message Category {
  int32 id = 1;
  int32 parent_id = 2;
  int32  priority = 3;
  string name = 4;
  string code = 5;
  string url = 6;
  string path = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  bool active = 10;
  string img = 11;
  string background = 12;
  bool is_meta = 13;
}

message CategoryTreeNode {
  Category category = 1;
  repeated CategoryTreeNode children = 2;
  int32 level = 3;
}

message CategoryTreeRequest {
}

message CategoryTreeResponse {
  repeated CategoryTreeNode categories = 1;
}