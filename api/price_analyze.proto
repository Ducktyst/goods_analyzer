syntax = "proto3";

package api;

//import "google/protobuf/timestamp.proto";
import "third_party/google/api/annotations.proto";
//import "third_party/options/annotations.proto";
//import "third_party/google/api/http.proto";

option go_package = "/api;api";

service PriceAnalyze {
  // список товаров с фильтром по категорией
  rpc GetProductList(ProductListRequest) returns (ProductListResponse) {
    option (google.api.http) = {
      get: "/api/v1/products"
    };
  }
  // список категорий
  rpc GetCategoryList(CategoryListRequest) returns (CategoryListResponse) {
    option (google.api.http) = {
      get: "/api/v1/categories"
    };
  }
  rpc GetProductsFilter(GetProductsFilterRequest) returns (GetProductsFilterResponse) {
    option (google.api.http) = {
      get: "/api/v1/filters"
    };
  }
  rpc AddProductsFilter(AddProductsFilterRequest) returns (AddProductsFilterResponse) {
    option (google.api.http) = {
      post: "/api/v1/filters"
    };
  }
}

message ProductListRequest {
  oneof category_id {
    bool category_id_null = 1;  // always set this to "true" when null
    int32 category_id_value = 2;
  }
  //  int32 page = 2;
  //  int32 per_page = 3;
}

message Product {
  string id = 1;
  // название
  string name = 2;
  // информация о бренде
  //  ProductBrand brand = 3;*/
  //  // информация о производителе
  //  ProductProducer producer = 4;
  //  // описания
  //  ProductInstruction instruction = 5;
  //  // символьный код (ссылка)
  //  string code = 6;
  //  // дата создания
  //  google.protobuf.Timestamp created_at = 7;
  //  // дата изменения
  //  google.protobuf.Timestamp updated_at = 8;
  //  // краткое описание
  //  string short_desc = 9;
  // атрибуты в формате code => свойство
  //  map<string, ProductAttribute> attributes = 10;
  // ссылка
  string url = 12;
}

message ProductListResponse {
  // товары
  repeated Product items = 1;
  // всего нашлось
  // int64 total = 2;
}

message CategoryListRequest {}

message Category {
  int32 id = 1;
  string name = 2;
  string code = 3;
}

message CategoryListResponse {
  repeated Category categories = 1;
}

message GetProductsFilterRequest {}

message GetProductsFilterResponse {}

message AddProductsFilterRequest {}

message AddProductsFilterResponse {}
